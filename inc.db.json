{"notes":{"1":{"created":1624782360,"updated":1624782360,"content":"Given we have a basic database schema for [Incremental note-taking] in inc now, can we build other clients on top of this service? Perhaps an SMS or email based one? #idea #todo"},"3":{"updated":1624748159,"content":"[Captured ideas are better than missed ones], and any tool that rightly calls itself a note-taking tool should not ever cause a situation where an idea is missed because it is too hard to write down in the moment. #principle","created":1624748159},"8":{"content":"Add count of hashtags and distinct hashtags to meta / stats command\n#todo","created":1624734061,"updated":1624734072},"9":{"updated":1624587807,"content":"#todo We need to do better handling; mostly, so that bad inputs do not crash CLI, so that the database is not accidentally destroyed","created":1624587807},"2":{"created":1624748181,"updated":1624748181,"content":"[Search is the heart of note-taking]. Ideas that cannot be recalled are worse than lost. #principle"},"11":{"content":"#idea inc is going to be how my Ideaflow workflow can be sustained outside of the Ideaflow corporate walled garden. For that, we need good reference semantics and speed that scales to 10ks of notes","created":1624397695,"updated":1624397695},"5":{"created":1624748124,"updated":1624748124,"content":"[Adding new ideas are better than changing old ideas] in note-taking, a related idea to Rich Hickey's \"facts don't change\" concept. #principle"},"10":{"updated":1624586801,"content":"#idea One way to have an airtight history implementation is to have each history entry also carry its own deep copy of the notes database state (S.notes). This would not be that difficult and an easy win.\nThis could allow us to add an \"undo\" command #todo","created":1624489068},"7":{"created":1624748005,"updated":1624748005,"content":"#idea With time as first-class citizen of notes per the incremental note-taking principles, inc should be able to query notes by (relative) time: today, yesterday, 1w (last 7 days), 2w (last 14-7 days), 5d (5-4 days ago), etc."},"4":{"content":"[Time as a first-class citizen] of note-taking. This is especially important in [Incremental note-taking]\n#principle","created":1624748090,"updated":1624748127},"0":{"created":1624831568,"updated":1624831568,"content":"The command \"inc help\" or something similar should print neatly the four principles of incremental notes. I like how [Zig] does this with \"zig zen\" printing the zen of zig. #todo"},"6":{"content":"#todo Ensure backslashes have (1) a way to be escaped and (2) are not included in the final resulting note, but only new lines","created":1624748031,"updated":1624748031}},"events":{"11":{"keyword":"","time":1624446848,"type":3},"46":{"time":1624645161,"type":5},"56":{"type":3,"keyword":"todo","time":1624734076},"53":{"keyword":"","time":1624734068,"type":3},"42":{"content":"#todo We need to write unit tests, especially for functions for markup and command parsing, so we do not make regressions and we ensure good coverage of edge cases","time":1624589764,"type":0},"73":{"time":1624782371,"type":3,"keyword":"[Incremental note-taking]"},"34":{"time":1624586804,"type":4,"query":{"type":0,"values":{"0":0}}},"65":{"time":1624748159,"type":0,"content":"[Captured ideas are better than missed ones], and any tool that rightly calls itself a note-taking tool should not ever cause a situation where an idea is missed because it is too hard to write down in the moment. #principle"},"55":{"type":3,"keyword":"","time":1624734073},"47":{"type":3,"keyword":"","time":1624734032},"35":{"keyword":"","time":1624586816,"type":3},"67":{"time":1624748182,"type":3,"keyword":""},"8":{"keyword":"","time":1624414944,"type":3},"43":{"time":1624589765,"type":3,"keyword":""},"69":{"type":3,"keyword":"#principle","time":1624748192},"25":{"type":5,"time":1624585852},"7":{"time":1624414939,"type":0,"content":"hashtag symbol should also trigger search, but for hashtags. In other words #idea should be synonymous with #idea"},"19":{"time":1624489256,"type":5},"6":{"time":1624414900,"type":3,"keyword":"idea"},"58":{"type":0,"content":"#todo Ensure backslashes have (1) a way to be escaped and (2) are not included in the final resulting note, but only new lines","time":1624748031},"64":{"type":3,"keyword":"","time":1624748128},"16":{"type":3,"keyword":"","time":1624489068},"70":{"keyword":"","time":1624748238,"type":3},"71":{"content":"Given we have a basic database schema for [Incremental note-taking] in inc now, can we build other clients on top of this service? Perhaps an SMS or email based one? #idea #todo","time":1624782360,"type":0},"23":{"keyword":"todo","time":1624585828,"type":3},"33":{"type":3,"keyword":"","time":1624586801},"49":{"keyword":"","time":1624734063,"type":3},"38":{"type":0,"content":"#todo We need to do better handling; mostly, so that bad inputs do not crash CLI, so that the database is not accidentally destroyed","time":1624587807},"57":{"content":"#idea With time as first-class citizen of notes per the incremental note-taking principles, inc should be able to query notes by (relative) time: today, yesterday, 1w (last 7 days), 2w (last 14-7 days), 5d (5-4 days ago), etc.","time":1624748005,"type":0},"52":{"time":1624734068,"type":2,"query":{"values":{"0":0},"type":0}},"13":{"keyword":"","time":1624446859,"type":3},"0":{"type":5,"time":1624414886},"50":{"time":1624734065,"type":0,"content":"add 0 #todo"},"24":{"time":1624585833,"type":3,"keyword":"#idea"},"66":{"type":0,"content":"[Search is the heart of note-taking]. Ideas that cannot be recalled are worse than lost. #principle","time":1624748181},"39":{"time":1624587808,"type":3,"keyword":""},"14":{"time":1624446891,"type":5},"59":{"keyword":"","time":1624748031,"type":3},"3":{"type":5,"time":1624414894},"4":{"time":1624414897,"type":3,"keyword":"#todo"},"72":{"time":1624782362,"type":3,"keyword":""},"37":{"time":1624586835,"type":3,"keyword":""},"45":{"type":3,"keyword":"","time":1624645148},"1":{"keyword":"","time":1624414891,"type":3},"9":{"type":1,"query":{"type":0,"values":{"0":0}},"content":"#todo","time":1624414946},"68":{"time":1624748185,"type":3,"keyword":"principle"},"62":{"time":1624748124,"type":0,"content":"[Adding new ideas are better than changing old ideas] in note-taking, a related idea to Rich Hickey's \"facts don't change\" concept. #principle"},"44":{"query":{"type":0,"values":{"0":0}},"time":1624645147,"type":2},"30":{"query":{"values":{"0":0},"type":0},"time":1624586758,"type":2},"10":{"time":1624414948,"type":3,"keyword":"todo"},"54":{"time":1624734072,"type":1,"query":{"values":{"0":0},"type":0},"content":"#todo"},"17":{"type":2,"query":{"type":0,"values":{"0":1}},"time":1624489239},"22":{"keyword":"","time":1624585826,"type":3},"51":{"keyword":"","time":1624734066,"type":3},"21":{"time":1624585825,"type":2,"query":{"values":{"0":3},"type":0}},"41":{"keyword":"","time":1624589076,"type":3},"29":{"type":3,"keyword":"","time":1624586757},"27":{"time":1624586738,"type":2,"query":{"values":{"0":3},"type":0}},"61":{"type":3,"keyword":"","time":1624748091},"26":{"time":1624586729,"type":3,"keyword":""},"32":{"type":1,"query":{"type":0,"values":{"0":0}},"content":"This could allow us to add an \"undo\" command #todo","time":1624586801},"36":{"query":{"values":{"0":1},"type":0},"time":1624586834,"type":2},"63":{"content":"#principle","time":1624748127,"type":1,"query":{"type":0,"values":{"0":0}}},"20":{"time":1624582696,"type":3,"keyword":""},"2":{"keyword":"","time":1624414892,"type":3},"31":{"time":1624586758,"type":3,"keyword":""},"76":{"type":5,"time":1624834107},"60":{"type":0,"content":"[Time as a first-class citizen] of note-taking. This is especially important in [Incremental note-taking]","time":1624748090},"5":{"time":1624414898,"type":3,"keyword":"todo"},"74":{"time":1624831568,"type":0,"content":"The command \"inc help\" or something similar should print neatly the four principles of incremental notes. I like how [Zig] does this with \"zig zen\" printing the zen of zig. #todo"},"75":{"time":1624831569,"type":3,"keyword":""},"15":{"time":1624489068,"type":0,"content":"#idea One way to have an airtight history implementation is to have each history entry also carry its own deep copy of the notes database state (S.notes). This would not be that difficult and an easy win."},"28":{"type":0,"content":"inc","time":1624586755},"48":{"content":"Add count of hashtags and distinct hashtags to meta / stats command","time":1624734061,"type":0},"12":{"keyword":"","time":1624446857,"type":3},"40":{"keyword":"undo","time":1624587817,"type":3},"18":{"time":1624489239,"type":3,"keyword":""}}}