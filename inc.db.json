{"notes":{"7":{"created":1624587807,"updated":1624587807,"content":"#todo We need to do better handling; mostly, so that bad inputs do not crash CLI, so that the database is not accidentally destroyed"},"8":{"content":"#idea One way to have an airtight history implementation is to have each history entry also carry its own deep copy of the notes database state (S.notes). This would not be that difficult and an easy win.\nThis could allow us to add an \"undo\" command #todo","created":1624489068,"updated":1624586801},"9":{"content":"#idea inc is going to be how my Ideaflow workflow can be sustained outside of the Ideaflow corporate walled garden. For that, we need good reference semantics and speed that scales to 10ks of notes","created":1624397695,"updated":1624397695},"4":{"updated":1624748031,"content":"#todo Ensure backslashes have (1) a way to be escaped and (2) are not included in the final resulting note, but only new lines","created":1624748031},"5":{"created":1624748005,"updated":1624748005,"content":"#idea With time as first-class citizen of notes per the incremental note-taking principles, inc should be able to query notes by (relative) time: today, yesterday, 1w (last 7 days), 2w (last 14-7 days), 5d (5-4 days ago), etc."},"2":{"created":1624748090,"updated":1624748127,"content":"[Time as a first-class citizen] of note-taking. This is especially important in [Incremental note-taking]\n#principle"},"1":{"created":1624748159,"updated":1624748159,"content":"[Captured ideas are better than missed ones], and any tool that rightly calls itself a note-taking tool should not ever cause a situation where an idea is missed because it is too hard to write down in the moment. #principle"},"3":{"created":1624748124,"updated":1624748124,"content":"[Adding new ideas are better than changing old ideas] in note-taking, a related idea to Rich Hickey's \"facts don't change\" concept. #principle"},"0":{"updated":1624748181,"content":"[Search is the heart of note-taking]. Ideas that cannot be recalled are worse than lost. #principle","created":1624748181},"6":{"content":"Add count of hashtags and distinct hashtags to meta / stats command\n#todo","created":1624734061,"updated":1624734072}},"events":{"59":{"time":1624748031,"type":3,"keyword":""},"61":{"type":3,"keyword":"","time":1624748091},"3":{"type":5,"time":1624414894},"30":{"query":{"values":{"0":0},"type":0},"time":1624586758,"type":2},"57":{"time":1624748005,"type":0,"content":"#idea With time as first-class citizen of notes per the incremental note-taking principles, inc should be able to query notes by (relative) time: today, yesterday, 1w (last 7 days), 2w (last 14-7 days), 5d (5-4 days ago), etc."},"25":{"type":5,"time":1624585852},"20":{"type":3,"keyword":"","time":1624582696},"56":{"time":1624734076,"type":3,"keyword":"todo"},"0":{"type":5,"time":1624414886},"12":{"time":1624446857,"type":3,"keyword":""},"40":{"keyword":"undo","time":1624587817,"type":3},"49":{"keyword":"","time":1624734063,"type":3},"8":{"type":3,"keyword":"","time":1624414944},"70":{"keyword":"","time":1624748238,"type":3},"47":{"time":1624734032,"type":3,"keyword":""},"67":{"type":3,"keyword":"","time":1624748182},"15":{"time":1624489068,"type":0,"content":"#idea One way to have an airtight history implementation is to have each history entry also carry its own deep copy of the notes database state (S.notes). This would not be that difficult and an easy win."},"33":{"type":3,"keyword":"","time":1624586801},"45":{"type":3,"keyword":"","time":1624645148},"68":{"time":1624748185,"type":3,"keyword":"principle"},"28":{"content":"inc","time":1624586755,"type":0},"27":{"time":1624586738,"type":2,"query":{"values":{"0":3},"type":0}},"13":{"keyword":"","time":1624446859,"type":3},"6":{"time":1624414900,"type":3,"keyword":"idea"},"11":{"type":3,"keyword":"","time":1624446848},"43":{"type":3,"keyword":"","time":1624589765},"32":{"query":{"type":0,"values":{"0":0}},"content":"This could allow us to add an \"undo\" command #todo","time":1624586801,"type":1},"17":{"type":2,"query":{"type":0,"values":{"0":1}},"time":1624489239},"16":{"time":1624489068,"type":3,"keyword":""},"66":{"type":0,"content":"[Search is the heart of note-taking]. Ideas that cannot be recalled are worse than lost. #principle","time":1624748181},"44":{"time":1624645147,"type":2,"query":{"type":0,"values":{"0":0}}},"62":{"time":1624748124,"type":0,"content":"[Adding new ideas are better than changing old ideas] in note-taking, a related idea to Rich Hickey's \"facts don't change\" concept. #principle"},"52":{"type":2,"query":{"type":0,"values":{"0":0}},"time":1624734068},"54":{"time":1624734072,"type":1,"query":{"type":0,"values":{"0":0}},"content":"#todo"},"31":{"keyword":"","time":1624586758,"type":3},"48":{"time":1624734061,"type":0,"content":"Add count of hashtags and distinct hashtags to meta / stats command"},"24":{"keyword":"#idea","time":1624585833,"type":3},"10":{"time":1624414948,"type":3,"keyword":"todo"},"50":{"time":1624734065,"type":0,"content":"add 0 #todo"},"14":{"time":1624446891,"type":5},"42":{"time":1624589764,"type":0,"content":"#todo We need to write unit tests, especially for functions for markup and command parsing, so we do not make regressions and we ensure good coverage of edge cases"},"29":{"type":3,"keyword":"","time":1624586757},"69":{"type":3,"keyword":"#principle","time":1624748192},"60":{"type":0,"content":"[Time as a first-class citizen] of note-taking. This is especially important in [Incremental note-taking]","time":1624748090},"22":{"type":3,"keyword":"","time":1624585826},"53":{"time":1624734068,"type":3,"keyword":""},"39":{"keyword":"","time":1624587808,"type":3},"64":{"time":1624748128,"type":3,"keyword":""},"58":{"type":0,"content":"#todo Ensure backslashes have (1) a way to be escaped and (2) are not included in the final resulting note, but only new lines","time":1624748031},"1":{"keyword":"","time":1624414891,"type":3},"41":{"type":3,"keyword":"","time":1624589076},"51":{"time":1624734066,"type":3,"keyword":""},"4":{"keyword":"#todo","time":1624414897,"type":3},"34":{"time":1624586804,"type":4,"query":{"values":{"0":0},"type":0}},"63":{"type":1,"query":{"type":0,"values":{"0":0}},"content":"#principle","time":1624748127},"21":{"type":2,"query":{"values":{"0":3},"type":0},"time":1624585825},"2":{"time":1624414892,"type":3,"keyword":""},"38":{"type":0,"content":"#todo We need to do better handling; mostly, so that bad inputs do not crash CLI, so that the database is not accidentally destroyed","time":1624587807},"7":{"time":1624414939,"type":0,"content":"hashtag symbol should also trigger search, but for hashtags. In other words #idea should be synonymous with #idea"},"35":{"keyword":"","time":1624586816,"type":3},"36":{"query":{"values":{"0":1},"type":0},"time":1624586834,"type":2},"46":{"time":1624645161,"type":5},"19":{"time":1624489256,"type":5},"18":{"time":1624489239,"type":3,"keyword":""},"37":{"type":3,"keyword":"","time":1624586835},"26":{"time":1624586729,"type":3,"keyword":""},"23":{"type":3,"keyword":"todo","time":1624585828},"9":{"query":{"type":0,"values":{"0":0}},"content":"#todo","time":1624414946,"type":1},"5":{"time":1624414898,"type":3,"keyword":"todo"},"55":{"time":1624734073,"type":3,"keyword":""},"65":{"type":0,"content":"[Captured ideas are better than missed ones], and any tool that rightly calls itself a note-taking tool should not ever cause a situation where an idea is missed because it is too hard to write down in the moment. #principle","time":1624748159}}}