{"notes":{"8":{"updated":1624748005,"content":"#idea With time as first-class citizen of notes per the incremental note-taking principles, inc should be able to query notes by (relative) time: today, yesterday, 1w (last 7 days), 2w (last 14-7 days), 5d (5-4 days ago), etc.","created":1624748005},"9":{"created":1624734061,"updated":1624734072,"content":"Add count of hashtags and distinct hashtags to meta / stats command\n#todo"},"6":{"content":"[Time as a first-class citizen] of note-taking. This is especially important in [Incremental note-taking]\n#principle","created":1624748090,"updated":1624748127},"0":{"created":1624852131,"updated":1624852131,"content":"Flag to the CLI to turn color options off (replace ansi functions with no-op stubs) in the output #todo"},"5":{"content":"[Captured ideas are better than missed ones], and any tool that rightly calls itself a note-taking tool should not ever cause a situation where an idea is missed because it is too hard to write down in the moment. #principle","created":1624748159,"updated":1624748159},"2":{"created":1624831568,"updated":1624831568,"content":"The command \"inc help\" or something similar should print neatly the four principles of incremental notes. I like how [Zig] does this with \"zig zen\" printing the zen of zig. #todo"},"11":{"content":"#idea One way to have an airtight history implementation is to have each history entry also carry its own deep copy of the notes database state (S.notes). This would not be that difficult and an easy win.\nThis could allow us to add an \"undo\" command #todo","created":1624489068,"updated":1624586801},"12":{"content":"#idea inc is going to be how my Ideaflow workflow can be sustained outside of the Ideaflow corporate walled garden. For that, we need good reference semantics and speed that scales to 10ks of notes","created":1624397695,"updated":1624397695},"7":{"content":"[Adding new ideas are better than changing old ideas] in note-taking, a related idea to Rich Hickey's \"facts don't change\" concept. #principle","created":1624748124,"updated":1624748124},"1":{"content":"#todo Add non-destructive delete, i.e. \"soft delete\" that can be queried with a flag given to any command. It doesn't make sense for an append-only notes system to require deleting entries to archive items.","created":1624851980,"updated":1624851980},"3":{"content":"Given we have a basic database schema for [Incremental note-taking] in inc now, can we build other clients on top of this service? Perhaps an SMS or email based one? #idea #todo","created":1624782360,"updated":1624782360},"10":{"updated":1624587807,"content":"#todo We need to do better handling; mostly, so that bad inputs do not crash CLI, so that the database is not accidentally destroyed","created":1624587807},"4":{"created":1624748181,"updated":1624748181,"content":"[Search is the heart of note-taking]. Ideas that cannot be recalled are worse than lost. #principle"}},"events":{"50":{"time":1624734065,"type":0,"content":"add 0 #todo"},"6":{"time":1624414900,"type":3,"keyword":"idea"},"72":{"keyword":"","time":1624782362,"type":3},"67":{"type":3,"keyword":"","time":1624748182},"42":{"time":1624589764,"type":0,"content":"#todo We need to write unit tests, especially for functions for markup and command parsing, so we do not make regressions and we ensure good coverage of edge cases"},"74":{"type":0,"content":"The command \"inc help\" or something similar should print neatly the four principles of incremental notes. I like how [Zig] does this with \"zig zen\" printing the zen of zig. #todo","time":1624831568},"36":{"query":{"values":{"0":1},"type":0},"time":1624586834,"type":2},"78":{"keyword":"todo","time":1624847123,"type":3},"73":{"time":1624782371,"type":3,"keyword":"[Incremental note-taking]"},"23":{"keyword":"todo","time":1624585828,"type":3},"27":{"query":{"type":0,"values":{"0":3}},"time":1624586738,"type":2},"19":{"time":1624489256,"type":5},"17":{"query":{"type":0,"values":{"0":1}},"time":1624489239,"type":2},"84":{"time":1624852134,"type":3,"keyword":"#todo"},"37":{"time":1624586835,"type":3,"keyword":""},"66":{"type":0,"content":"[Search is the heart of note-taking]. Ideas that cannot be recalled are worse than lost. #principle","time":1624748181},"28":{"time":1624586755,"type":0,"content":"inc"},"7":{"content":"hashtag symbol should also trigger search, but for hashtags. In other words #idea should be synonymous with #idea","time":1624414939,"type":0},"1":{"keyword":"","time":1624414891,"type":3},"18":{"time":1624489239,"type":3,"keyword":""},"30":{"type":2,"query":{"type":0,"values":{"0":0}},"time":1624586758},"65":{"content":"[Captured ideas are better than missed ones], and any tool that rightly calls itself a note-taking tool should not ever cause a situation where an idea is missed because it is too hard to write down in the moment. #principle","time":1624748159,"type":0},"0":{"type":5,"time":1624414886},"81":{"time":1624851980,"type":0,"content":"#todo Add non-destructive delete, i.e. \"soft delete\" that can be queried with a flag given to any command. It doesn't make sense for an append-only notes system to require deleting entries to archive items."},"12":{"keyword":"","time":1624446857,"type":3},"21":{"query":{"values":{"0":3},"type":0},"time":1624585825,"type":2},"31":{"time":1624586758,"type":3,"keyword":""},"47":{"keyword":"","time":1624734032,"type":3},"20":{"keyword":"","time":1624582696,"type":3},"58":{"time":1624748031,"type":0,"content":"#todo Ensure backslashes have (1) a way to be escaped and (2) are not included in the final resulting note, but only new lines"},"59":{"type":3,"keyword":"","time":1624748031},"51":{"type":3,"keyword":"","time":1624734066},"77":{"time":1624847121,"type":3,"keyword":""},"60":{"content":"[Time as a first-class citizen] of note-taking. This is especially important in [Incremental note-taking]","time":1624748090,"type":0},"29":{"type":3,"keyword":"","time":1624586757},"54":{"query":{"values":{"0":0},"type":0},"content":"#todo","time":1624734072,"type":1},"41":{"time":1624589076,"type":3,"keyword":""},"48":{"time":1624734061,"type":0,"content":"Add count of hashtags and distinct hashtags to meta / stats command"},"82":{"keyword":"todo","time":1624851983,"type":3},"11":{"keyword":"","time":1624446848,"type":3},"62":{"type":0,"content":"[Adding new ideas are better than changing old ideas] in note-taking, a related idea to Rich Hickey's \"facts don't change\" concept. #principle","time":1624748124},"15":{"time":1624489068,"type":0,"content":"#idea One way to have an airtight history implementation is to have each history entry also carry its own deep copy of the notes database state (S.notes). This would not be that difficult and an easy win."},"71":{"time":1624782360,"type":0,"content":"Given we have a basic database schema for [Incremental note-taking] in inc now, can we build other clients on top of this service? Perhaps an SMS or email based one? #idea #todo"},"46":{"time":1624645161,"type":5},"24":{"keyword":"#idea","time":1624585833,"type":3},"75":{"keyword":"","time":1624831569,"type":3},"14":{"time":1624446891,"type":5},"33":{"keyword":"","time":1624586801,"type":3},"25":{"type":5,"time":1624585852},"68":{"time":1624748185,"type":3,"keyword":"principle"},"79":{"type":2,"query":{"type":0,"values":{"0":2}},"time":1624847166},"61":{"time":1624748091,"type":3,"keyword":""},"76":{"type":5,"time":1624834107},"55":{"type":3,"keyword":"","time":1624734073},"9":{"type":1,"query":{"type":0,"values":{"0":0}},"content":"#todo","time":1624414946},"39":{"type":3,"keyword":"","time":1624587808},"34":{"query":{"type":0,"values":{"0":0}},"time":1624586804,"type":4},"44":{"query":{"type":0,"values":{"0":0}},"time":1624645147,"type":2},"64":{"time":1624748128,"type":3,"keyword":""},"49":{"keyword":"","time":1624734063,"type":3},"57":{"time":1624748005,"type":0,"content":"#idea With time as first-class citizen of notes per the incremental note-taking principles, inc should be able to query notes by (relative) time: today, yesterday, 1w (last 7 days), 2w (last 14-7 days), 5d (5-4 days ago), etc."},"83":{"time":1624852131,"type":0,"content":"Flag to the CLI to turn color options off (replace ansi functions with no-op stubs) in the output #todo"},"52":{"time":1624734068,"type":2,"query":{"values":{"0":0},"type":0}},"2":{"type":3,"keyword":"","time":1624414892},"40":{"keyword":"undo","time":1624587817,"type":3},"38":{"time":1624587807,"type":0,"content":"#todo We need to do better handling; mostly, so that bad inputs do not crash CLI, so that the database is not accidentally destroyed"},"69":{"time":1624748192,"type":3,"keyword":"#principle"},"8":{"keyword":"","time":1624414944,"type":3},"3":{"type":5,"time":1624414894},"80":{"time":1624847167,"type":3,"keyword":"#todo"},"63":{"content":"#principle","time":1624748127,"type":1,"query":{"type":0,"values":{"0":0}}},"22":{"time":1624585826,"type":3,"keyword":""},"26":{"time":1624586729,"type":3,"keyword":""},"5":{"time":1624414898,"type":3,"keyword":"todo"},"85":{"time":1624853356,"type":3,"keyword":""},"45":{"type":3,"keyword":"","time":1624645148},"16":{"type":3,"keyword":"","time":1624489068},"53":{"time":1624734068,"type":3,"keyword":""},"10":{"type":3,"keyword":"todo","time":1624414948},"43":{"keyword":"","time":1624589765,"type":3},"70":{"time":1624748238,"type":3,"keyword":""},"4":{"keyword":"#todo","time":1624414897,"type":3},"13":{"time":1624446859,"type":3,"keyword":""},"35":{"keyword":"","time":1624586816,"type":3},"32":{"time":1624586801,"type":1,"query":{"values":{"0":0},"type":0},"content":"This could allow us to add an \"undo\" command #todo"},"56":{"keyword":"todo","time":1624734076,"type":3}}}